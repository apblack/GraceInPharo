generated
symbolNames
	^ #('"confidential"' '"public"' '"override"' '"readable"' '","' '"{"' '"method"' '"="' '"is"' '"writable"' '"interface"' '":="' '"#pragma"' '"return"' '"import"' '";"' '"var"' '"dialect"' '"def"' '"}"' '"as"' '"class"' '"use"' '"›"' '"inherit"' '"exclude"' '"‹"' '"Unknown"' '"type"' '"]"' '"trait"' '"alias"' '"["' '"("' '"prefix"' '"outer"' '")"' '"object"' '":"' '"false"' '"true"' '"self"' '<stringSegment>' '<uninterpretedString>' '<whitespace>' '<comment>' '<newline>' '<error>' '<dot>' '<openTP>' '<closeTP>' '<outerDot>' '<selfDot>' '<id>' '<decimalNumeral>' '<baseExponentNumeral>' '<basedRadixNumeral>' '<arrow>' '<dquote>' '<ellipsis>' '<operator>' '<typeOperator>' 'Pragma' 'Assignment' 'Return' 'Import' 'Dialect' 'EmptyStatement' 'Identifier' 'AssignmentRequest' 'Expression?' 'StringLiteral' 'AnnotationOption' 'VarDeclaration' 'DefDeclaration' 'TypeDeclaration' 'TypeOption' '( ":=" Expression)' '( ":=" Expression)?' 'Annotation' '( "," Annotation)' '( "," Annotation)*' 'MethodHeader' 'ReturnTypeOption' 'BlockBody' 'ClassOrTraitDeclaration' 'ObjectConstructor' 'AssignmentMethodHeader' 'ParameterizedMethodHeader' 'Declaration' 'BinaryMethodHeader' 'UnaryMethodHeader' 'TypeParameterList' 'SingleMethodParameter' 'MethodParameterList' '( <id> TypeParameterList MethodParameterList)' '( <id> TypeParameterList MethodParameterList)+' 'Sep' 'MethodParameter' '( "," MethodParameter)' '( "," MethodParameter)*' 'B e g i n' 'RequestWithArguments' 'SelfRequest' 'OuterRequest' 'TargetedRequest' 'ObjectBody' 'Type' 'Term' '( <outerDot>)' '( <outerDot>)+' 'Block' 'TypeArguments' '( <id> ArgumentList)' '( <id> ArgumentList)*' 'DelimitedTerm' '( "," Expression)' '( "," Expression)+' 'TypeArguments?' 'UnaryRequest' 'Factor' '( <operator> TypeArguments? Factor)' '( <operator> TypeArguments? Factor)+' 'BinaryRequest' 'BlockParameterList' '( BlockParameterList <arrow>)' 'BlockParameter' '( "," BlockParameter)' '( "," BlockParameter)*' 'PatternOption' 'NonIdExpression' '( Sep Statement)' '( Sep Statement)*' 'NonIdFactor' 'String' 'NonIdTerm' 'SequenceConstructor' 'SpecialTerm' 'Statement' 'Request' 'ObjectItem' '( "," Expression)*' 'StringConstructor' 'UninterpretedString' 'StartString' 'Numeral' 'Module' '<stringSegment>?' 'RetDefault' 'StartInterp' '( StartInterp "{" Expression StartString "}" <stringSegment>?)' '( StartInterp "{" Expression StartString "}" <stringSegment>?)+' 'StartUninterp' 'ArgumentList' '<uninterpretedString>?' 'ReuseStatement' 'ReuseModifier' '( ReuseModifier)' '( ReuseModifier)*' 'ExcludeClause' 'AliasClause' 'InterfaceLiteral' 'MethodDeclaration' 'TypeParameter' '( "," TypeParameter)' '( "," TypeParameter)*' 'RequestPart' 'TypeTerm' '( <typeOperator> TypeArguments? TypeTerm)' '( <typeOperator> TypeArguments? TypeTerm)+' '( "," Type)' '( "," Type)*' 'Signature' 'Sep?' '( Sep Signature)' '( Sep Signature)*' 'E O F' 'error' 'Expression' 'ParameterlessMethodHeader')